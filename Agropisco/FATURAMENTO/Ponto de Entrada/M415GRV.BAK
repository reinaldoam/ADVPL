
//- P.E Após a Gravação do Orçamento de Venda. Utilizado para impressao do orcamento de vendas 
//- apos a inclusao/alteracao do orcamento pelo modulo de faturamento.

USER Function M415GRV                                                 
   LOCAL cOrc
   If Inclui .Or. Altera 
      ValidaOrc()     
      U_ORCAGRO(cOrc) 
   Endif      
RETURN

//////////////////////////
STATIC FUNCTION ValidaOrc 
  Local lRet      := .T.     
  Local n_Total   := 0
  Local cCondPg   := GetMv("MV_CONDPAD")
  Local cOrcamento:= SCJ->CJ_NUM
  Local nRisco,nDias,n_Financ,n_Compra,cCodCli,cLojCli
  
  n_Financ := 0.00
  n_Compra := 0.00                       
  
  //- Orcamento
  //SCJ->(dbSetOrder(1))
  MsSetOrder("SCJ","CJ_FILIAL+CJ_NUM")//Incluído por Ulisses Jr em 24/04/08 em substituição as linhas acima
  SCJ->(DbSeek(xFilial("SCJ")+cOrcamento))

  
  //- Item do orcamento
  //SE4->(dbSetOrder(1))
  MsSetOrder("SE4","E4_FILIAL+E4_CODIGO")//Incluído por Ulisses Jr em 24/04/08 em substituição as linhas acima
  SE4->(dbSeek(xFilial("SE4")+SCJ->CJ_CONDPAG))
  
  
  cCodCli := SCJ->CJ_CLIENTE
  cLojCli := SCJ->CJ_LOJA 

  //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
  //³ Permitir apenas R$,CC,CD,CH para consumidor final  ³
  //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 
  If cCodCli+cLojCli == GetMV("MV_AGRXCLI") //- Cliente consumidor final
     If !(TRIM(SE4->E4_FORMA) $ "R$#CC#CD#CH")
        Alert("Apenas sao permitidas vendas a vista (R$,CC,CD,CH) para cliente padrao !!!")
        lRet:= .F. 
     Endif 
  Endif    

  //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
  //³ Avaliando grau de risco do cliente      ³
  //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 
  If !(TRIM(SE4->E4_FORMA) $ "R$#CC#CD#CH")   
     If SA1->A1_RISCO == "E"   
        Alert("Cliente bloqueado por risco. A forma de pagamento sera alterada para Dinheiro !!!") 
        lRet:= .F. 
     ElseIf SA1->A1_RISCO $ "BCD"  
        //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
        //³Verificando grau de risco do cliente ³
        //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
        If SA1->A1_RISCO == "B"
           nRisco:= GetMV("MV_RISCOB")
        ElseIf SA1->A1_RISCO == "C" 
          nRisco:= GetMV("MV_RISCOC")
        Else                           
          nRisco:= GetMV("MV_RISCOD")
        Endif                            
        //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
  	    //³Avalia o grau de risco do cliente de acordo com o parâmetro MV_RISCO ³
	    //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 
        lRisco := U_VerRisco(nRisco, cCodCli, cLojCli)
        If lRisco 
           Alert("Cliente bloqueado por risco. A forma de pagamento sera alterada para Dinheiro !!!")   
           lRet:= .F.
        Endif
 	    If lRet
           //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
           //³ Verificando valor da compra em andamento ³
           //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 
           n_Compra:= ValorCompra(cOrcamento)
 	    
	       //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	       //³Verifica a existencia de titulos em aberto ³
	       //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 
	       n_Financ:= U_ValFinanc(cCodCli, cLojCli) 
           
           If (n_Financ + n_Compra) > SA1->A1_LC     
              ALERT("Limite de credito disponivel inferior ao valor da compra. A forma de pagamento sera alterada para Dinheiro !!!")
              lRet:= .F.   
           Endif                                    
        Endif
     Endif
  Endif
  If !lRet
     Reclock("SCJ",.F.)
     Replace SCJ->CJ_CONDPAG with cCondPg
     MsUnlock()                          
  Endif  
RETURN      

////////////////////////////////////////
STATIC Function ValorCompra(cOrcamento)
  Local n_Valor := 0
  //- Item do orcamento
//  SCK->(dbSetOrder(1))
  MsSetOrder("SCK","CK_FILIAL+CK_NUM")//Incluído por Ulisses Jr em 24/04/08 em substituição as linhas acima
  SCK->(dbSeek(xFilial("SCK")+cOrcamento))
  While !SCK->(EOF()) .and. SCK->CK_NUM == cOrcamento
     n_Valor += SCK->CK_VALOR
     SCK->(DbSkip())
  Enddo       
RETURN n_Valor